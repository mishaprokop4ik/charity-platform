basePath: /api/v1
definitions:
  Kurajj_internal_models.Address:
    properties:
      city:
        type: string
      district:
        type: string
      homeLocation:
        type: string
      region:
        type: string
    type: object
  Kurajj_internal_models.AdminCreation:
    properties:
      companyName:
        type: string
      email:
        type: string
      firstName:
        type: string
      secondName:
        type: string
      telephone:
        type: string
    type: object
  Kurajj_internal_models.CommentCreateRequest:
    properties:
      eventId:
        type: integer
      text:
        type: string
    type: object
  Kurajj_internal_models.CommentResponse:
    properties:
      creationDate:
        type: string
      id:
        type: integer
      isUpdated:
        type: boolean
      phoneNumber:
        type: string
      profileImageURL:
        type: string
      text:
        type: string
      updateTime:
        type: string
      username:
        type: string
    type: object
  Kurajj_internal_models.CommentUpdateRequest:
    properties:
      id:
        type: integer
      text:
        type: string
    type: object
  Kurajj_internal_models.Comments:
    properties:
      comments:
        items:
          $ref: '#/definitions/Kurajj_internal_models.CommentResponse'
        type: array
    type: object
  Kurajj_internal_models.CreationResponse:
    properties:
      id:
        type: integer
    type: object
  Kurajj_internal_models.ErrResponse:
    properties:
      error:
        type: string
    type: object
  Kurajj_internal_models.EventStatus:
    enum:
    - active
    - inactive
    - done
    - blocked
    type: string
    x-enum-varnames:
    - Active
    - InActive
    - Done
    - Blocked
  Kurajj_internal_models.EventType:
    enum:
    - proposal-event
    type: string
    x-enum-varnames:
    - ProposalEventType
  Kurajj_internal_models.ProposalEventGetResponse:
    properties:
      authorInfo:
        $ref: '#/definitions/Kurajj_internal_models.UserShortInfo'
      availableHelps:
        type: integer
      comments:
        items:
          $ref: '#/definitions/Kurajj_internal_models.CommentResponse'
        type: array
      competitionDate:
        type: string
      creationDate:
        type: string
      description:
        type: string
      id:
        type: integer
      maxConcurrentRequests:
        type: integer
      status:
        $ref: '#/definitions/Kurajj_internal_models.EventStatus'
      tags:
        items:
          $ref: '#/definitions/Kurajj_internal_models.TagResponse'
        type: array
      title:
        type: string
      transactions:
        items:
          $ref: '#/definitions/Kurajj_internal_models.TransactionResponse'
        type: array
    type: object
  Kurajj_internal_models.ProposalEventRequestCreate:
    properties:
      description:
        type: string
      maxConcurrentRequests:
        type: integer
      tags:
        items:
          $ref: '#/definitions/Kurajj_internal_models.TagRequest'
        type: array
      title:
        type: string
    type: object
  Kurajj_internal_models.ProposalEventRequestUpdate:
    properties:
      competitionDate:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  Kurajj_internal_models.ProposalEvents:
    properties:
      proposalEvents:
        items:
          $ref: '#/definitions/Kurajj_internal_models.ProposalEventGetResponse'
        type: array
    type: object
  Kurajj_internal_models.RefreshTokenInput:
    properties:
      refreshToken:
        type: string
    type: object
  Kurajj_internal_models.SignInEntity:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  Kurajj_internal_models.SignUpUser:
    properties:
      address:
        $ref: '#/definitions/Kurajj_internal_models.Address'
      companyName:
        type: string
      email:
        type: string
      firstName:
        type: string
      password:
        type: string
      secondName:
        type: string
      telephone:
        type: string
    type: object
  Kurajj_internal_models.SignedInUser:
    properties:
      address:
        $ref: '#/definitions/Kurajj_internal_models.Address'
      companyName:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      refreshToken:
        type: string
      secondName:
        type: string
      telephone:
        type: string
      token:
        type: string
    type: object
  Kurajj_internal_models.TagGroupRequestCreate:
    properties:
      eventID:
        type: integer
      eventType:
        $ref: '#/definitions/Kurajj_internal_models.EventType'
      tags:
        items:
          $ref: '#/definitions/Kurajj_internal_models.TagRequestCreate'
        type: array
    type: object
  Kurajj_internal_models.TagRequest:
    properties:
      eventID:
        type: integer
      eventType:
        $ref: '#/definitions/Kurajj_internal_models.EventType'
      id:
        type: integer
      title:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  Kurajj_internal_models.TagRequestCreate:
    properties:
      title:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  Kurajj_internal_models.TagResponse:
    properties:
      id:
        type: integer
      title:
        type: string
      values:
        items:
          $ref: '#/definitions/Kurajj_internal_models.TagValueResponse'
        type: array
    type: object
  Kurajj_internal_models.TagValueResponse:
    properties:
      id:
        type: integer
      value:
        type: string
    type: object
  Kurajj_internal_models.TokensResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  Kurajj_internal_models.TransactionResponse:
    properties:
      comment:
        type: string
      competitionDate:
        type: string
      creationDate:
        type: string
      creator:
        $ref: '#/definitions/Kurajj_internal_models.UserShortInfo'
      creatorID:
        type: integer
      eventID:
        type: integer
      eventType:
        $ref: '#/definitions/Kurajj_internal_models.EventType'
      id:
        type: integer
      responder:
        $ref: '#/definitions/Kurajj_internal_models.UserShortInfo'
      responderStatus:
        $ref: '#/definitions/Kurajj_internal_models.TransactionStatus'
      transactionStatus:
        $ref: '#/definitions/Kurajj_internal_models.TransactionStatus'
    type: object
  Kurajj_internal_models.TransactionStatus:
    enum:
    - in_process
    - completed
    - interrupted
    - canceled
    - waiting
    type: string
    x-enum-varnames:
    - InProcess
    - Completed
    - Interrupted
    - Canceled
    - Waiting
  Kurajj_internal_models.TransactionsExport:
    properties:
      transactions:
        items:
          $ref: '#/definitions/Kurajj_internal_models.TransactionResponse'
        type: array
    type: object
  Kurajj_internal_models.UserShortInfo:
    properties:
      id:
        type: integer
      phoneNumber:
        type: string
      profileImageURL:
        type: string
      username:
        type: string
    type: object
  Kurajj_internal_models_search.AllEventsSearch:
    properties:
      name:
        type: string
      order:
        type: string
      sortField:
        type: string
      statusStates:
        $ref: '#/definitions/Kurajj_internal_models.EventStatus'
      tags:
        items:
          $ref: '#/definitions/Kurajj_internal_models.TagRequest'
        type: array
      takingPart:
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: mykha
    name: API Support
    url: http://www.swagger.io/support
  description: Kurajj Charity Platform
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swagger Cor Charity Platform
  version: "1.0"
paths:
  /api/admin/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.AdminCreation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Kurajj_internal_models.CreationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Create a new admin
      tags:
      - Admin
  /api/events/proposal/accept:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Update proposal event transaction's status to models.InProcess state
      tags:
      - Proposal Event
  /api/events/proposal/comment:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.CommentCreateRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Kurajj_internal_models.CreationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Create new comment in proposal event
      tags:
      - Proposal Event
  /api/events/proposal/comment/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Update proposal event comment
      tags:
      - Proposal Event
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.CommentUpdateRequest'
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Update proposal event comment
      tags:
      - Proposal Event
  /api/events/proposal/comments/id:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Kurajj_internal_models.Comments'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Take all comments in proposal event by its id
      tags:
      - Proposal Event
  /api/events/proposal/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.ProposalEventRequestCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Kurajj_internal_models.CreationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Create a new proposal event
      tags:
      - Proposal Event
  /api/events/proposal/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Delete proposal event
      tags:
      - Proposal Event
  /api/events/proposal/get:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ProposalEvents'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Get all proposal events
      tags:
      - Proposal Event
  /api/events/proposal/get-own:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ProposalEvents'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Get all proposal events created by user requester id
      tags:
      - Proposal Event
  /api/events/proposal/get/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ProposalEventGetResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Get proposal event by id
      tags:
      - Proposal Event
  /api/events/proposal/response:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Create new transaction with waiting status for the proposal event if
        slot is available
      tags:
      - Proposal Event
  /api/events/proposal/transactions/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Kurajj_internal_models.TransactionsExport'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Get all proposal event transactions(finished, in process, etc)
      tags:
      - Proposal Event
  /api/events/proposal/update-status/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Update proposal event transaction's status to to one of models.TransactionStatus
        state
      tags:
      - Proposal Event
  /api/events/proposal/update/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.ProposalEventRequestUpdate'
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Update proposal event
      tags:
      - Proposal Event
  /api/refresh-user-data:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.RefreshTokenInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Kurajj_internal_models.SignedInUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Return user data
      tags:
      - User
  /api/tags/upsert:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.TagGroupRequestCreate'
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Delete all previous tags and their values and create new by input
      tags:
      - Tag
  /auth/confirm/{email}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Updates user's status to 'activated'.
      tags:
      - Auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.RefreshTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Kurajj_internal_models.TokensResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Update access token expiration date
      tags:
      - Auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.SignInEntity'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Kurajj_internal_models.SignedInUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Signs In a user
      tags:
      - Auth
  /auth/sign-in-admin:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.SignInEntity'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Kurajj_internal_models.SignedInUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Signs In a user
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models.SignUpUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Kurajj_internal_models.CreationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Signs Up new user
      tags:
      - Auth
  /open-api/proposal-search:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Kurajj_internal_models_search.AllEventsSearch'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ProposalEvents'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Kurajj_internal_models.ErrResponse'
      summary: Return proposal events by given order and filter values
      tags:
      - Proposal Event
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
