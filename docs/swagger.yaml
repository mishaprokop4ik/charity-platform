basePath: /api/v1
definitions:
  models.Address:
    properties:
      city:
        type: string
      district:
        type: string
      homeLocation:
        type: string
      region:
        type: string
    type: object
  models.AdminCreation:
    properties:
      companyName:
        type: string
      email:
        type: string
      firstName:
        type: string
      isAdmin:
        type: boolean
      secondName:
        type: string
      telephone:
        type: string
    type: object
  models.Comment:
    properties:
      creationDate:
        type: string
      eventID:
        type: integer
      eventType:
        type: string
      id:
        type: integer
      text:
        type: string
      userID:
        type: integer
    type: object
  models.CreationResponse:
    properties:
      id:
        type: integer
    type: object
  models.ErrResponse:
    properties:
      error:
        type: string
    type: object
  models.ProposalEventGetResponse:
    properties:
      authorID:
        type: integer
      category:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      competitionDate:
        type: string
      creationDate:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      transactions:
        items:
          $ref: '#/definitions/models.TransactionResponse'
        type: array
    type: object
  models.ProposalEventRequestCreate:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.ProposalEventRequestUpdate:
    properties:
      category:
        type: string
      competitionDate:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  models.ProposalEvents:
    properties:
      proposalEvents:
        items:
          $ref: '#/definitions/models.ProposalEventGetResponse'
        type: array
    type: object
  models.SignInEntity:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.SignUpUser:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      companyName:
        type: string
      email:
        type: string
      firstName:
        type: string
      password:
        type: string
      secondName:
        type: string
      telephone:
        type: string
    type: object
  models.SignedInUser:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      companyName:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      secondName:
        type: string
      telephone:
        type: string
      token:
        type: string
    type: object
  models.TransactionResponse:
    properties:
      competitionDate:
        type: string
      creatorID:
        type: integer
      eventID:
        type: integer
      eventType:
        type: string
      id:
        type: integer
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: mykha
    name: API Support
    url: http://www.swagger.io/support
  description: Kurajj Charity Platform
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swagger Cor Charity Platform
  version: "1.0"
paths:
  /api/admin/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AdminCreation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Create a new admin
      tags:
      - Admin
  /api/events/proposal/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ProposalEventRequestCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Create a new proposal event
      tags:
      - Proposal Event
  /api/events/proposal/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Delete proposal event
      tags:
      - Proposal Event
  /api/events/proposal/get:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProposalEvents'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Get all proposal events
      tags:
      - Proposal Event
  /api/events/proposal/get-own:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProposalEvents'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Get all proposal events created by user requester id
      tags:
      - Proposal Event
  /api/events/proposal/get/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProposalEventGetResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Get proposal event by id
      tags:
      - Proposal Event
  /api/events/proposal/update/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ProposalEventRequestUpdate'
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Update proposal event
      tags:
      - Proposal Event
  /auth/confirm/{email}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Updates user's status to activated.
      tags:
      - Auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignInEntity'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SignedInUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Signs In a user
      tags:
      - Auth
  /auth/sign-in-admin:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignInEntity'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SignedInUser'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Signs In a user
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignUpUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreationResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Signs Up new user
      tags:
      - Auth
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
